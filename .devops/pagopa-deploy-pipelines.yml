# Azure DevOps pipeline to release a new version and deploy to production.

parameters:
  - name: 'DEV_DEPLOY'
    displayName: 'Deploy on DEV environment'
    type: boolean
    default: True
    values:
      - False
      - True
  - name: 'UAT_PROD_DEPLOY'
    displayName: 'Deploy on UAT then PROD environments'
    type: boolean
    default: False
    values:
      - False
      - True
  - name: 'RELEASE_SEMVER'
    displayName: 'When packing a release, define the version bump to apply (release is done automatically when deploying on UAT and skipped on DEV) '
    type: string
    values:
      - major
      - minor
      - patch
    default: minor


variables:
  NODE_VERSION: 14.16.0
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

# Only manual activations are intended
trigger: none
pr: none

# This pipeline has been implemented to be run on hosted agent pools based both
# on 'windows' and 'ubuntu' virtual machine images and using the scripts defined
# in the package.json file. Since we are deploying on Azure functions on Windows
# runtime, the pipeline is currently configured to use a Windows hosted image for
# the build and deploy.
pool:
  vmImage: 'windows-2019'

resources:
  repositories:
    - repository: pagopaCommons
      type: github
      name: pagopa/azure-pipeline-templates
      ref: refs/tags/v19
      endpoint: 'io-azure-devops-github-ro'

    - repository: checkoutTests
      type: github
      name: pagopa/pagopa-checkout-tests
      ref: main
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: Prepare_artifact_dev
    condition: and(succeeded(), eq(${{parameters.DEV_DEPLOY}}, true))
    dependsOn: []
    jobs:
      - job: make_build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              # On the assumption that this stage is executed only when Relase stage is,
              #  with this parameter we set the reference the deploy script must pull changes from.
              # The branch/tag name is calculated from the source branch
              #  ex: Build.SourceBranch=refs/heads/release/pagopa-porting --> release/pagopa-porting
              #  ex: Build.SourceBranch=refs/tags/v1.2.3-RELEASE --> v1.2.3-RELEASE
              gitReference: ${{ replace(replace(variables['Build.SourceBranch'], 'refs/tags/', ''), 'refs/heads/', '') }}

          - script: |
              API_HOST=https://api.dev.platform.pagopa.it API_BASEPATH=payment-transactions-gateway/external/v1 API_GET_INTERVAL=5000 API_TIMEOUT=10000 yarn generate && yarn build
            displayName: 'Build'

          - publish: $(System.DefaultWorkingDirectory)/dist
            artifact: Bundle_DEV

  - stage: Deploy_DEV_pagoPA
    dependsOn:
      - Prepare_artifact_dev
    jobs:
      - job: 'deploy'
        steps:
          - checkout: none

          - download: current
            artifact: Bundle_DEV

          - task: AzureCLI@1
            displayName: 'Sync checkout storage on DEV'
            inputs:
              azureSubscription: 'DEV-PAGOPA-SERVICE-CONN'
              scriptLocation: inlineScript
              inlineScript: |
                call az storage blob sync --container $web --account-name pagopadcheckoutsa -s "$(Pipeline.Workspace)\Bundle_DEV" -d payment-transactions-gateway

          - task: AzureCLI@1
            displayName: 'Purge CDN endpoint on DEV'
            inputs:
              azureSubscription: 'DEV-PAGOPA-SERVICE-CONN'
              scriptLocation: inlineScript
              inlineScript: |
                call az cdn endpoint purge -g pagopa-d-checkout-fe-rg -n pagopa-d-checkout-cdn-endpoint --profile-name pagopa-d-checkout-cdn-profile --content-paths "/*"

  - stage: E2E_Tests_DEV
    dependsOn:
      - Deploy_DEV_pagoPA
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: end_to_end_tests_dev
        steps:
          - checkout: checkoutTests
          - script : |
             ls
             echo "##[debug] Change placeholder ..."
             cd test/e2e
             sed -i "s,^PAYMENT_TRANSACTION_GATEWAY_FE_URL=.*$,PAYMENT_TRANSACTION_GATEWAY_FE_URL=https://dev.checkout.pagopa.it/," .env
             sed -i "s,^WRONG_REQUEST_ID=.*$,WRONG_REQUEST_ID=75f5d7ce-ef83-4dd3-8fdc-5a736b138cf3," .env
            
            displayName: 'Setup env for test'
          - script: |
             docker build -t ui_test test/e2e
            displayName: 'Build test image'

          - script: |
              docker run --name=ui_test ui_test
            displayName: 'Run UI test container'
            continueOnError: true 

          - script: |
              docker cp ui_test:/puppeteer/test_reports  test_reports
            displayName: 'Copy test result'
            continueOnError: true 

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*-TEST.xml' 
              searchFolder: '$(System.DefaultWorkingDirectory)'

  # Create a relase
  # Activated when ONE OF these are met:
  # - is on branch main
  # - is a tag in the form v{version}-RELEASE

  - stage: Release
    dependsOn: []
    condition:
      eq(${{parameters.UAT_PROD_DEPLOY}}, true)
    # condition:
    #   and(
    #     succeeded(),
    #     eq(${{parameters.UAT_PROD_DEPLOY}}, true),
    #     or(
    #       eq(variables['Build.SourceBranch'], 'refs/heads/main'),
    #       and(
    #         startsWith(variables['Build.SourceBranch'], 'refs/tags'),
    #         endsWith(variables['Build.SourceBranch'], '-RELEASE')
    #       )
    #     )
    #   )
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: make_release
        steps:
        - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              persistCredentials: true
          - template: templates/node-github-release/template.yaml@pagopaCommons
            parameters:
              semver: '${{ parameters.RELEASE_SEMVER }}'
              gitEmail: $(GIT_EMAIL)
              gitUsername: $(GIT_USERNAME)
              gitHubConnection: $(GITHUB_CONNECTION)
              release_branch: main

        - ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/main') }}:
          - script: |
              echo "We assume this reference to be a valid release: $(Build.SourceBranch). Therefore, there is no need to bundle a new release."
            displayName: 'Skip release bundle'
  
  # Prepare Artifact
  - stage: Prepare_artifact_uat
    dependsOn:
      - Release
    jobs:
      - job: make_build
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: templates/node-job-setup/template.yaml@pagopaCommons
            parameters:
              # On the assumption that this stage is executed only when Relase stage is,
              #  with this parameter we set the reference the deploy script must pull changes from.
              # The branch/tag name is calculated from the source branch
              #  ex: Build.SourceBranch=refs/heads/main --> main
              #  ex: Build.SourceBranch=refs/tags/v1.2.3-RELEASE --> v1.2.3-RELEASE
              gitReference: ${{ replace(replace(variables['Build.SourceBranch'], 'refs/tags/', ''), 'refs/heads/', '') }}

          - script: |
              API_HOST=https://api.uat.platform.pagopa.it API_BASEPATH=payment-transactions-gateway/external/v1 API_GET_INTERVAL=5000 API_TIMEOUT=10000 yarn build

            displayName: 'Build'

          - publish: $(System.DefaultWorkingDirectory)/dist
            artifact: Bundle_UAT

  - stage: Deploy_UAT_pagoPA
    dependsOn:
      - Prepare_artifact_uat
    jobs:
      - job: 'deploy'
        steps:
          - checkout: none

          - download: current
            artifact: Bundle_UAT

          - task: AzureCLI@1
            displayName: 'Sync checkout storage on UAT'
            inputs:
              azureSubscription: 'UAT-PAGOPA-SERVICE-CONN'
              scriptLocation: inlineScript
              inlineScript: |
                call az storage blob sync --container $web --account-name pagopaucheckoutsa -s "$(Pipeline.Workspace)\Bundle_UAT" -d payment-transactions-gateway

          - task: AzureCLI@1
            displayName: 'Purge CDN endpoint on UAT'
            inputs:
              azureSubscription: 'UAT-PAGOPA-SERVICE-CONN'
              scriptLocation: inlineScript
              inlineScript: |
                call az cdn endpoint purge -g pagopa-u-checkout-fe-rg -n pagopa-u-checkout-cdn-endpoint --profile-name pagopa-u-checkout-cdn-profile --content-paths "/*"

  - stage: E2E_Tests_UAT
    dependsOn:
      - Deploy_UAT_pagoPA
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      - job: end_to_end_tests_uat
        steps:
          - checkout: checkoutTests
          - script : |
             echo "##[debug] Change placeholder ..."
             cd test/e2e
             sed -i "s,^PAYMENT_TRANSACTION_GATEWAY_FE_URL=.*$,PAYMENT_TRANSACTION_GATEWAY_FE_URL=https://uat.checkout.pagopa.it/," .env
             sed -i "s,^WRONG_REQUEST_ID=.*$,WRONG_REQUEST_ID=75f5d7ce-ef83-4dd3-8fdc-5a736b138cf3," .env
          - script: |
             docker build -t ui_test test/e2e
            displayName: 'Build test image'

          - script: |
              docker run --name=ui_test ui_test
            displayName: 'Run UI test container'
            continueOnError: true 

          - script: |
              docker cp ui_test:/puppeteer/test_reports  test_reports
            displayName: 'Copy test result'
            continueOnError: true 

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*-TEST.xml' 
              searchFolder: '$(System.DefaultWorkingDirectory)'
